services:
  api:
    container_name: api
    restart: on-failure
    build:
      context: .
      dockerfile: services/api/Dockerfile
    ports:
      - "1323:1323"
    environment:
      GO_ENV: production
      PORT: 1323
      POSTGRES_URI: postgres://root:password@postgresdb:5432/postgres
      SERVER_URL: http://localhost:1323
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      MINIO_ENDPOINT_URL: minio:9000
      MINIO_STORAGE_BUCKET: scripts
    depends_on:
      postgresdb:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl", "-f", "http://localhost:1323/health", "||", "exit", "1"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 5
      
  postgresdb:
    container_name: postgresdb
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "root", "-d", "postgres" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: minio
    image: quay.io/minio/minio:latest
    restart: unless-stopped 
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001" # Site proxy
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/ready" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio_data:
    driver: local
