name: CodeQL Analysis

on:
  workflow_dispatch:
  push:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  contents: read
  security-events: write
  actions: read
  packages: read

jobs:
  codeql:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language:
          - language: javascript-typescript
            build-mode: none
          - language: go
            build-mode: manual
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
          config-file: ./codeql-config.yaml

      - name: Setup Go (for Go analysis)
        if: matrix.language == 'go'
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Setup Node.js (for JavaScript/TypeScript analysis)
        if: matrix.language == 'javascript-typescript'
        uses: ./.github/actions/setup-node-pnpm

      - name: Build Go Services
        if: matrix.language.build-mode == 'manual'
        shell: bash/fix Unexpected value 'run'
        run: |
          # List all go services
          GO_SERVICES=(
            "services/api"
          )

          # Build each Go service
          for service in "${GO_SERVICES[@]}"; do
            if [ -d "$service" ] && [ -f "$service/go.mod" ]; then
              cd "$service"

              go mod download
              
              go build -v ./...

              cd - > /dev/null
            else
              echo "âš  Skipping $service (directory or go.mod not found)"
            fi
          done

      - name: Build JS/TS
        if: matrix.language == 'javascript-typescript'
        run: pnpm build --affected

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"